/**
 * generated by Xtext 2.25.0
 */
package fr.univcotedazur.i3s.kairos.moccml.example.concurrlang.concurrLang;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Fork</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link fr.univcotedazur.i3s.kairos.moccml.example.concurrlang.concurrLang.Fork#getParent <em>Parent</em>}</li>
 *   <li>{@link fr.univcotedazur.i3s.kairos.moccml.example.concurrlang.concurrLang.Fork#getChild <em>Child</em>}</li>
 * </ul>
 *
 * @see fr.univcotedazur.i3s.kairos.moccml.example.concurrlang.concurrLang.ConcurrLangPackage#getFork()
 * @model
 * @generated
 */
public interface Fork extends Statements
{
  /**
   * Returns the value of the '<em><b>Parent</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Parent</em>' containment reference.
   * @see #setParent(Block)
   * @see fr.univcotedazur.i3s.kairos.moccml.example.concurrlang.concurrLang.ConcurrLangPackage#getFork_Parent()
   * @model containment="true"
   * @generated
   */
  Block getParent();

  /**
   * Sets the value of the '{@link fr.univcotedazur.i3s.kairos.moccml.example.concurrlang.concurrLang.Fork#getParent <em>Parent</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Parent</em>' containment reference.
   * @see #getParent()
   * @generated
   */
  void setParent(Block value);

  /**
   * Returns the value of the '<em><b>Child</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Child</em>' containment reference.
   * @see #setChild(Block)
   * @see fr.univcotedazur.i3s.kairos.moccml.example.concurrlang.concurrLang.ConcurrLangPackage#getFork_Child()
   * @model containment="true"
   * @generated
   */
  Block getChild();

  /**
   * Sets the value of the '{@link fr.univcotedazur.i3s.kairos.moccml.example.concurrlang.concurrLang.Fork#getChild <em>Child</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Child</em>' containment reference.
   * @see #getChild()
   * @generated
   */
  void setChild(Block value);

} // Fork
